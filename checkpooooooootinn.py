# -*- coding: utf-8 -*-
"""checkpooooooootinn

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XRLzsVJ_zzFbgXLckbgVrsunVctQkjmw
"""

# que 1
class point3d:
  def __init__(self,x,y,z):
    self.x = x
    self.y = y
    self.z = z
  def ff(self):
    return "({},{},{})".format(self.x,self.y,self.z)


pi = point3d(1,2,3)  

pi.ff()

# que 2
class rectangle:
  def __init__ (self,length,width):
    self.length = length
    self.width = width
  def area(self):
    return self.length * self.width 
  def perimeter(self):
    return 2*(self.length + self.width)
my_rectangle = rectangle(3,4)
print(my_rectangle.area())
print(my_rectangle.perimeter())

# que 3
class circle:
  def __init__(self,o,r):
    self.o=o
    self.r=r
  def area(self) :
    return 22/7 * (self.r**2) 
  def peri(self):
    return 2*(22/7) * (self.r) 
  def isinside(self,x,y):
    if (x - self.o[0])**2 + (y - self.o[1])**2 < self.r**2:
      print("inside")
    else:
      print("outside")
hashin=circle((2,3),5)
print(hashin.area()) 
print(hashin.peri())
print(hashin.isinside(2,3))

# que 4
class bank_account:
  def __init__(self,blance):
    self.balance=blance
  def deposit(self,y) :
    self.balance = self.balance + y
    return self.balance
  def withd(self,x) :
    self.balance= self.balance - x
    return self.balance
hashim = bank_account(2000)
print(hashim.withd(1000))
print(hashim.deposit(500))